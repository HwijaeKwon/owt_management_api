spring:
  config:
    activate:
      on-profile: prod
  data:
    mongodb:
      uri: mongodb://${DATABASE_URL:localhost/owtdb}
      database: ${DATABASE_NAME:owtdb}
      username: ${DATABASE_USERNAME:guest}
      password: ${DATABASE_PASSWORD:guest}
  cloud:
    function:
        definition: tx;rx
    stream:
      bindings:
        tx-out-0:
          binder: rabbit
          destination: owtRpc
        rx-in-0:
          binder: rabbit
          destination: owtRpc
          group: management-${QUEUE_NAME:queue}
      rabbit:
        bindings:
          rx-in-0:
            consumer:
              exchange-type: direct
              #management api가 scalable하려면 중복되지 않는 값을 사용해야 한다
              binding-routing-key: ${BINDING_ROUTING_KEY:management}
          tx-out-0:
            producer:
              exchangeDurable: false
              exchangeAutoDelete: true
              exchange-type: direct
              routing-key-expression: headers['routingKey']

  rabbitmq:
    host: ${AMQP_HOST:localhost}
    port: ${AMQP_PORT:5672}
    username: ${AMQP_USERNAME:guest}
    password: ${AMQP_PASSWORD:guest}

server:
  address: ${INTERNAL_IP:localhost}
  port: ${PORT:8080}

#mongodb retry
mongodb:
  transaction:
    enable: ${TRANSACTION_ENABLE:false}
  retry:
    times: ${MONGODB_RETRY_TIMES:5}
    initialDelay: ${MONGODB_RETRY_INITIALDELAY:100}
    maxDelay: ${MONGODB_RETRY_MAXDELAY:1000}

logging:
  level:
    org.springframework: ${LOG_LEVEL:INFO}
    org.springframework.web: ${WEB_LOG_LEVEL:DEBUG}